{"version":3,"sources":["actions/index.js","reducers/index.js","components/LoadingSpinner.js","containers/Table.js","components/Paginator.js","components/LoadingPage.js","components/Header.js","components/SearchForm.js","containers/App.js","initState.js","index.js"],"names":["FANART_PERSONAL_KEY","FANART_PROJECT_KEY","REQUEST_SHOWS","RECEIVE_SHOWS","REQUEST_POSTER_INFO","RECEIVE_POSTER_INFO","FAIL_POSTER_INFO","RECEIVE_PAGINATION_INFO","SET_PAGE","CHANGE_ITEMS_PER_PAGE","SHOW_IMG","SET_SEARCH_VALUE","REQUEST_SEARCH_SHOWS","RECEIVE_SEARCH_SHOWS","FAIL_SEARCH_SHOWS","traktOptions","headers","Content-Type","trakt-api-version","trakt-api-key","fetchShows","pageNumber","itemsPerPage","dispatch","type","url","fetch","then","response","ok","receivePaginationInfo","json","failSearchShows","shows","map","info","fetchPosterInfo","ids","tvdb","pageCount","parseInt","get","itemCount","setSearchValue","value","searchShows","console","log","show","posterId","requestPosterInfo","failPosterInfo","receivePosterInfo","revealImg","showId","setPage","changeItemsPerPage","items","rootReducer","combineReducers","id","state","arguments","length","undefined","action","Object","objectSpread","infoNeedToBeChanged","showsDownloaded","title","year","rating","slug","imgLoaded","item","posterUrl","tvposter","Array","seasonposter","search","_","trim","previousValue","pending","failed","mode","LoadingSpinner","react_default","a","createElement","className","Table","_this","this","props","isEmpty","showsElems","key","href","target","rel","components_LoadingSpinner","src","alt","onLoad","hidden","React","Component","connect","bindActionCreators","actionCreators","Paginator","currPage","totalPages","prevButton","onClick","nextButton","numberedButtonMaker","buttNumb","pageNumb","LoadingPage","Header","text","toUpperCase","SearchForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","handleKeyPressed","handleSearch","event","_this$props","_this2","_this$props2","placeholder","ref","input","onChange","onKeyPress","App","handleChange","infoLoaded","extraInfo","searchInfo","components_LoadingPage","components_SearchForm","components_Header","components_Paginator","p","containers_Table","initState","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.106e4efd.chunk.js","sourcesContent":["import fetch from 'cross-fetch';\n\nconst TRAKT_CLIENT_KEY = \"1098aa9283a45930885916b98e046d43cd7301e4de4198c5e624aa39b5cd6972\";\nconst FANART_PERSONAL_KEY = \"313966685b1712ca5f9c4c15427da38d\";\nconst FANART_PROJECT_KEY = \"4a2226e35da3b653ed9d980ae3efb5f8\";\nexport const REQUEST_SHOWS = \"REQUEST_SHOWS\";\nexport const RECEIVE_SHOWS = \"RECEIVE_SHOWS\";\nexport const REQUEST_POSTER_INFO = \"REQUEST_POSTER_INFO\";\nexport const RECEIVE_POSTER_INFO = \"RECEIVE_POSTER_INFO\";\nexport const FAIL_POSTER_INFO = \"FAIL_POSTER_INFO\";\nexport const RECEIVE_PAGINATION_INFO = \"RECEIVE_PAGINATION_INFO\";\nexport const SET_PAGE = \"SET_PAGE\";\nexport const CHANGE_ITEMS_PER_PAGE = \"CHANGE_ITEMS_PER_PAGE\";\nexport const SHOW_IMG = \"SHOW_IMG\";\nexport const SET_SEARCH_VALUE = \"SET_SEARCH_VALUE\";\nexport const REQUEST_SEARCH_SHOWS = \"REQUEST_SEARCH_SHOWS\";\nexport const RECEIVE_SEARCH_SHOWS = \"RECEIVE_SEARCH_SHOWS\";\nexport const FAIL_SEARCH_SHOWS = \"FAIL_SEARCH_SHOWS\";\n\nconst traktOptions = {\n  headers: {\n    \"Content-Type\": 'application/json',\n    \"trakt-api-version\": '2',\n    \"trakt-api-key\": TRAKT_CLIENT_KEY\n  }\n};\n\n\n// Getting all shows info\n\nexport function fetchShows(pageNumber, itemsPerPage) {\n  return dispatch => {\n    dispatch(requestShows());\n\n    const url = \"https://api.trakt.tv/shows/popular?extended=full&page=\" + pageNumber + \"&limit=\" + itemsPerPage;\n    return fetch(url, traktOptions)\n      .then(response => {\n        if (!response.ok) {\n          dispatch(failSearchShows())\n        } else {\n          dispatch(receivePaginationInfo(response));\n          return response.json()\n        }\n      })\n      .then(json => {\n        dispatch(receiveShows(json));\n        json.map(info => dispatch(fetchPosterInfo(info.ids.tvdb)));\n      });\n  }\n}\n\nfunction requestShows() {\n  return {\n    type: REQUEST_SHOWS\n  }\n}\n\nfunction receiveShows(shows) {\n  return {\n    type: RECEIVE_SHOWS,\n    shows: shows,\n  }\n}\n\nexport function receivePaginationInfo(response) {\n  return {\n    type: RECEIVE_PAGINATION_INFO,\n    pageCount: parseInt(response.headers.get(\"X-Pagination-Page-Count\")),\n    itemCount: parseInt(response.headers.get(\"X-Pagination-Item-Count\")),\n  }\n}\n\n// Search\n\nexport function setSearchValue(value) {\n  return {\n    type: SET_SEARCH_VALUE,\n    value: value\n  }\n}\n\nexport function searchShows(value, pageNumber, itemsPerPage) {\n  return dispatch => {\n    dispatch(requestSearchShows());\n    console.log(\"value=\"+ value);\n    const url = \"https://api.trakt.tv/search/show?extended=full&query=\" + value +\n      \"&page=\" + pageNumber + \"&limit=\" + itemsPerPage;\n    return fetch(url, traktOptions)\n      .then(response => {\n        if (!response.ok) {\n          dispatch(failSearchShows())\n        } else {\n          dispatch(receivePaginationInfo(response));\n          return response.json()\n        }\n      })\n      .then(json => {\n        dispatch(receiveSearchShows(json));\n        json.map(info => dispatch(fetchPosterInfo(info.show.ids.tvdb)));\n      });\n  }\n}\n\nfunction requestSearchShows() {\n  return {\n    type: REQUEST_SEARCH_SHOWS\n  }\n}\n\nfunction receiveSearchShows(shows) {\n  return {\n    type: RECEIVE_SEARCH_SHOWS,\n    shows: shows,\n  }\n}\n\nfunction failSearchShows() {\n  return {\n    type: FAIL_SEARCH_SHOWS\n  }\n}\n\n\n// Getting poster info\n\nexport function fetchPosterInfo(posterId) {\n  return dispatch => {\n    dispatch(requestPosterInfo(posterId));\n\n    const url = \"https://webservice.fanart.tv/v3/tv/\" + posterId + \"?api_key=\" + FANART_PROJECT_KEY +\n      \"&client_key=\" + FANART_PERSONAL_KEY;\n    return fetch(url)\n      .then(response => {\n        if (!response.ok) {\n          dispatch(failPosterInfo(posterId))\n        } else {\n          return response.json()\n        }\n      })\n      .then(json => dispatch(receivePosterInfo(json, posterId)));\n  }\n}\n\nexport function requestPosterInfo(posterId) {\n  return {\n    type: REQUEST_POSTER_INFO,\n    posterId: posterId\n  }\n}\n\nexport function receivePosterInfo(info, posterId) {\n  return {\n    type: RECEIVE_POSTER_INFO,\n    info: info,\n    posterId: posterId\n  }\n}\n\nexport function failPosterInfo(posterId) {\n  return {\n    type: FAIL_POSTER_INFO,\n    posterId: posterId\n  }\n}\n\nexport function revealImg(showId) {\n  return {\n    type: SHOW_IMG,\n    showId: showId\n  }\n}\n\n\n// Pagination\n\nexport function setPage(pageNumber) {\n  return {\n    type: SET_PAGE,\n    pageNumber: pageNumber,\n  }\n}\n\nexport function changeItemsPerPage(value) {\n  return {\n    type: CHANGE_ITEMS_PER_PAGE,\n    items: value\n  }\n}\n\n\n","import { combineReducers } from 'redux'\nimport * as _ from \"lodash\";\nimport {\n  CHANGE_ITEMS_PER_PAGE,\n  FAIL_POSTER_INFO, FAIL_SEARCH_SHOWS,\n  RECEIVE_PAGINATION_INFO,\n  RECEIVE_POSTER_INFO, RECEIVE_SEARCH_SHOWS,\n  RECEIVE_SHOWS, REQUEST_SEARCH_SHOWS,\n  REQUEST_SHOWS,\n  SET_PAGE, SET_SEARCH_VALUE,\n  SHOW_IMG\n} from \"../actions\";\n\nexport function showsReducer(state = {}, action) {\n  let id;\n  switch (action.type) {\n    case REQUEST_SHOWS:\n      return {\n        ...state,\n        infoNeedToBeChanged: false,\n        showsDownloaded: false\n      };\n    case REQUEST_SEARCH_SHOWS:\n      return {\n        ...state,\n        infoNeedToBeChanged: false,\n        showsDownloaded: false\n      };\n    case RECEIVE_SHOWS:\n      id = 1 + (state.pageNumber - 1) * state.itemsPerPage;\n      return {\n        ...state,\n        info: action.shows && action.shows.map(show => ({\n          id: id++,\n          title: show.title,\n          year: show.year,\n          rating: show.rating,\n          posterId: show.ids.tvdb,\n          slug: show.ids.slug,\n          imgLoaded: false,\n        })),\n        showsDownloaded: true\n      };\n    case RECEIVE_SEARCH_SHOWS:\n      id = 1 + (state.pageNumber - 1) * state.itemsPerPage;\n      return {\n        ...state,\n        info: action.shows && action.shows.map(item => ({\n          id: id++,\n          title: item.show.title,\n          year: item.show.year,\n          rating: item.show.rating,\n          posterId: item.show.ids.tvdb,\n          slug: item.show.ids.slug,\n          imgLoaded: false,\n        })),\n        showsDownloaded: true\n      };\n    case RECEIVE_PAGINATION_INFO:\n      return {\n        ...state,\n        pageCount: action.pageCount,\n        itemCount: action.itemCount\n      };\n    case RECEIVE_POSTER_INFO:\n      // TODO: normal algo\n      return {\n        ...state,\n        info: state.info && state.info.map(show =>\n            show.posterId === action.posterId ? {...show, posterUrl: getPosterUrlFromInfo(action.info)} : show\n          )\n      };\n    case FAIL_POSTER_INFO:\n      return {\n        ...state,\n        info: state.info && state.info.map(show =>\n          show.posterId === action.posterId ? {...show, posterUrl: \"no info\"} : show\n        )\n      };\n    case SHOW_IMG:\n      return {\n        ...state,\n        info: state.info && state.info.map(show =>\n          show.id === action.showId ? {...show, imgLoaded: true} : show\n        )\n      };\n    case SET_PAGE:\n      return {\n        ...state,\n        pageNumber: (action.pageNumber < 1) || (action.pageNumber > state.pageCount) ? state.pageNumber :\n          action.pageNumber,\n        infoNeedToBeChanged: true\n      };\n    case CHANGE_ITEMS_PER_PAGE:\n      return {\n        ...state,\n        itemsPerPage: action.items,\n        pageNumber: 1,\n        infoNeedToBeChanged: true\n      }\n  }\n  return state;\n}\n\nfunction getPosterUrlFromInfo(info) {\n  if (info.tvposter) {\n    if (info.tvposter instanceof Array) return info.tvposter[0].url;\n    return info.tvposter.url;\n  }\n  if (info.seasonposter) {\n    if (info.seasonposter instanceof Array) return info.seasonposter[0].url;\n    return info.seasonposter.url;\n  }\n  return \"no posters\";\n}\n\nfunction searchReducer(state = {}, action) {\n  switch (action.type) {\n    case SET_SEARCH_VALUE:\n      return {\n        ...state,\n        value: _.escapeRegExp(action.value.trim())\n      };\n    case REQUEST_SEARCH_SHOWS:\n      return {\n        ...state,\n        previousValue: state.value,\n        value: \"\",\n        pending: true,\n        failed: false\n      };\n    case RECEIVE_SEARCH_SHOWS:\n      return {\n        ...state,\n        pending: false\n      };\n    case FAIL_SEARCH_SHOWS:\n      return {\n        ...state,\n        pending: false,\n        failed: true\n      };\n  }\n  return state;\n}\n\nfunction infoReducer(state = {}, action) {\n  switch (action.type) {\n    case REQUEST_SEARCH_SHOWS:\n      return {\n        ...state,\n        mode: \"search\",\n      };\n    case REQUEST_SHOWS:\n      return {\n        ...state,\n        mode: \"popular\",\n      };\n  }\n  return state;\n}\n\n\nconst rootReducer = combineReducers({\n  shows: showsReducer,\n  search: searchReducer,\n  info: infoReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\n\nconst LoadingSpinner = () => {\n  return <div className=\"spinner\"/>\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../actions\"\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nclass Table extends React.Component {\n  render() {\n    const {shows} = this.props;\n\n    console.log(\"!shows.info || shows.info === []\");\n    console.log(!shows.info || shows.info.isEmpty);\n\n    // if (!shows.info || shows.info === []) {\n    //   return \"No such shows ;(\"\n    // }\n\n    const showsElems = shows.info && shows.info.map(show =>\n      <tr key={show.id}>\n        <td>{show.id}</td>\n        <td>\n          <a href={\"https://trakt.tv/shows/\" + show.slug} target=\"_blank\" rel=\"noopener noreferrer\">\n            {show.title}\n          </a>\n        </td>\n        <td>{show.year ? show.year : \"¯\\\\_(ツ)_/¯\"}</td>\n        <td>{show.rating ? show.rating : \"¯\\\\_(ツ)_/¯\"}</td>\n        <td>\n          {!show.posterUrl ? <LoadingSpinner/> :\n            show.posterUrl === \"no posters\" ? <p>Only logo :(</p> :\n              show.posterUrl === \"no info\" ? <p>No posters ;(</p> :\n                <a href={show.posterUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                  {!show.imgLoaded ? <LoadingSpinner/> : \"\"}\n                  <img src={show.posterUrl} className=\"poster\" alt={show.title + \" poster\"}\n                       onLoad={() => this.props.revealImg(show.id)} hidden={!show.imgLoaded}/>\n                </a>\n          }\n        </td>\n      </tr>\n    );\n\n    return (\n      <div className=\"Table\">\n        <table>\n          <thead>\n            <tr>\n              <td>№</td>\n              <td>Title</td>\n              <td>Year</td>\n              <td>Rating</td>\n              <td>Poster</td>\n            </tr>\n          </thead>\n          <tbody>{showsElems}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shows: state.shows,\n    info: state.info\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n// TODO: click time limit\nconst Paginator = (props) => {\n  const {currPage, totalPages} = props;\n\n  const paginatorClassName = \"pagination\";\n  const prevButton = currPage <= 3 ? \"\" :\n    <li>\n      <button className=\"prev\" onClick={() => props.setPage(1)} >\n        «\n      </button>\n    </li>;\n  const nextButton = currPage >= totalPages - 2 ? \"\" :\n    <li>\n      <button className=\"next\" onClick={() => props.setPage(totalPages)}>\n        »\n      </button>\n    </li>;\n  const numberedButtonMaker = (buttNumb, pageNumb) => {\n    return (pageNumb < buttNumb) || (pageNumb > totalPages) ? \"\" :\n      <li>\n        <button className={currPage === pageNumb ? \"active\" : \"\"}\n                onClick={currPage !== pageNumb ? () => props.setPage(pageNumb) : null}>\n          {pageNumb}\n        </button>\n      </li>\n  };\n\n  if (currPage - 2 < 1) {\n    return <ul className={paginatorClassName}>\n      {prevButton}\n      {numberedButtonMaker(1, 1)}\n      {numberedButtonMaker(2, 2)}\n      {numberedButtonMaker(3, 3)}\n      {numberedButtonMaker(4, 4)}\n      {numberedButtonMaker(5, 5)}\n      {nextButton}\n    </ul>;\n  }\n\n  if (currPage + 2 > totalPages) {\n    return <ul className={paginatorClassName}>\n      {prevButton}\n      {numberedButtonMaker(1,totalPages - 4)}\n      {numberedButtonMaker(2,totalPages - 3)}\n      {numberedButtonMaker(3,totalPages - 2)}\n      {numberedButtonMaker(4,totalPages - 1)}\n      {numberedButtonMaker(5,totalPages)}\n      {nextButton}\n    </ul>;\n  }\n\n  return <ul className={paginatorClassName}>\n    {prevButton}\n    {numberedButtonMaker(1, currPage - 2)}\n    {numberedButtonMaker(2, currPage - 1)}\n    {numberedButtonMaker(3, currPage)}\n    {numberedButtonMaker(4, currPage + 1)}\n    {numberedButtonMaker(5, currPage + 2)}\n    {nextButton}\n  </ul>;\n};\n\nPaginator.propTypes = {\n  setPage: PropTypes.func.isRequired,\n  currPage: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired\n};\n\nexport default Paginator;\n","import React from \"react\";\n\nconst LoadingPage = () => {\n  return <div className=\"loader\" />\n};\n\nexport default LoadingPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) =>\n  <h1>\n    {props.text.toUpperCase()}\n  </h1>;\n\nHeader.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\n\nexport default Header;\n","import React from \"react\";\nimport * as actionCreators from \"../actions\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {setPage} from \"../actions\";\n\nclass SearchForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyPressed = this.handleKeyPressed.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleInputChange() {\n    this.props.setSearchValue(this.search.value);\n  }\n\n  handleKeyPressed(event) {\n    if (event.key === \"Enter\") {\n      this.handleSearch()\n    }\n  }\n\n  handleSearch() {\n    const {shows, search} = this.props;\n    if (search.value !== \"\") {\n      this.props.setPage(1);\n      this.props.searchShows(search.value, shows.pageNumber, shows.itemsPerPage);\n    }\n  }\n\n  // TODO: enter button\n  // TODO: validation\n  render() {\n    const {shows, search} = this.props;\n    return <div>\n      <p>\n        <input type=\"search\" placeholder=\"Search...\"\n               ref={input => this.search = input} onChange={this.handleInputChange} onKeyPress={this.handleKeyPressed}/>\n        <button onClick={this.handleSearch}>Find</button>\n      </p>\n    </div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shows: state.shows,\n    search: state.search,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\n","import React from 'react';\nimport '../App.css';\nimport Table from \"./Table\";\nimport * as actionCreators from \"../actions\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport Paginator from \"../components/Paginator\";\nimport LoadingPage from \"../components/LoadingPage\";\nimport Header from \"../components/Header\";\nimport SearchForm from \"../components/SearchForm\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.changeItemsPerPage(event.target.value);\n  }\n\n  render() {\n    const {shows, info, search} = this.props;\n    const infoLoaded = shows.pageCount && shows.itemCount;\n    const extraInfo = <div>\n      <p>\n        TV-shows displayed:\n        <select value={shows.itemsPerPage} onChange={this.handleChange}>\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n          <option value={50}>50</option>\n        </select>. Page {shows.pageNumber} of {shows.pageCount}</p>\n      <p>Shows in total: {shows.itemCount}</p>\n    </div>;\n    const searchInfo = info.mode !== \"search\" ? \"\" :\n        <h2>\n          Searched results for: \"{search.previousValue}\".\n          <button onClick={() => this.props.fetchShows(shows.pageNumber, shows.itemsPerPage)}>Show all TV-shows</button>\n        </h2>;\n\n    if (shows.infoNeedToBeChanged) {\n      switch (info.mode) {\n        case \"popular\":\n          this.props.fetchShows(shows.pageNumber, shows.itemsPerPage);\n          break;\n        case \"search\":\n          this.props.searchShows(search.value, shows.pageNumber, shows.itemsPerPage);\n      }\n      return <div className=\"App\">\n        <LoadingPage/>\n      </div>\n    }\n\n    if (!shows.showsDownloaded) {\n      return <div className=\"App\">\n        <LoadingPage/>\n      </div>\n    }\n\n    if (!infoLoaded) {\n      return <div className=\"App\">\n        <SearchForm/>\n        <Header text=\"tv show posters\"/>\n        {searchInfo}\n        <Table/>\n      </div>;\n    }\n\n    return <div className=\"App\">\n      <SearchForm/>\n      <Header text=\"tv show posters\"/>\n      <Paginator setPage={(p) => this.props.setPage(p)} currPage={shows.pageNumber} totalPages={shows.pageCount}/>\n      {searchInfo}\n      <Table/>\n      {extraInfo}\n    </div>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shows: state.shows,\n    search: state.search,\n    info: state.info,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initState = {\n  shows: {\n    info: [],\n    pageCount: null, // TODO: move to info section\n    itemCount: null, // TODO: move to info section\n    pageNumber: 1, // TODO: move to info section\n    itemsPerPage: 10, // TODO: move to info section\n    infoNeedToBeChanged: true, // TODO: move to info section\n    showsDownloaded: false // TODO: move to info section\n  },\n  search: {\n    value: \"\",\n    pending: false,\n    failed: false\n  },\n  info: {\n    mode: \"popular\"\n  }\n};\n\nexport default initState;\n","import React from 'react';\nimport { render } from 'react-dom'\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/index'\nimport './index.css';\nimport App from './containers/App';\nimport initState from \"./initState\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk'\n// import * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(rootReducer, initState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}