{"version":3,"sources":["actions/index.js","reducers/index.js","containers/Table.js","components/PageElement.js","components/Loading.js","containers/App.js","initState.js","index.js"],"names":["TRAKT_CLIENT_KEY","FANART_PERSONAL_KEY","FANART_PROJECT_KEY","REQUEST_SHOWS","RECEIVE_SHOWS","REQUEST_POSTER_INFO","RECEIVE_POSTER_INFO","RECEIVE_PAGINATION_INFO","SET_NEXT_PAGE","SET_PREVIOUS_PAGE","fetchShows","pageNumber","itemsPerPage","dispatch","requestShows","url","options","headers","Content-Type","trakt-api-version","trakt-api-key","fetch","then","response","pageCount","parseInt","get","itemCount","receivePaginationInfo","json","receiveShows","map","info","fetchPosterInfo","ids","tvdb","type","shows","posterId","requestPosterInfo","receivePosterInfo","setNextPage","setPreviousPage","rootReducer","combineReducers","state","arguments","length","undefined","action","console","log","id","Object","objectSpread","show","title","year","infoNeedToBeChanged","posterUrl","tvposter","Array","seasonposter","Table","this","props","showsElems","react_default","a","createElement","key","href","target","src","className","alt","React","Component","connect","bindActionCreators","actionCreators","PageElement","onClick","previousPage","disabled","currPage","nextPage","totalPages","Loading","App","_this","infoLoaded","components_Loading","containers_Table","extraInfo","components_PageElement","initState","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.341f1ec9.chunk.js","sourcesContent":["import fetch from 'cross-fetch';\n\nconst TRAKT_CLIENT_KEY = \"1098aa9283a45930885916b98e046d43cd7301e4de4198c5e624aa39b5cd6972\";\nconst FANART_PERSONAL_KEY = \"313966685b1712ca5f9c4c15427da38d\";\nconst FANART_PROJECT_KEY = \"4a2226e35da3b653ed9d980ae3efb5f8\";\nexport const REQUEST_SHOWS = \"REQUEST_SHOWS\";\nexport const RECEIVE_SHOWS = \"RECEIVE_SHOWS\";\nexport const REQUEST_POSTER_INFO = \"REQUEST_POSTER_INFO\";\nexport const RECEIVE_POSTER_INFO = \"RECEIVE_POSTER_INFO\";\nexport const RECEIVE_PAGINATION_INFO = \"RECEIVE_PAGINATION_INFO\";\nexport const SET_NEXT_PAGE = \"SET_NEXT_PAGE\";\nexport const SET_PREVIOUS_PAGE = \"SET_PREVIOUS_PAGE\";\n\n\n// Getting all shows info\n\nexport function fetchShows(pageNumber, itemsPerPage) {\n  return dispatch => {\n    dispatch(requestShows());\n\n    const url = \"https://api.trakt.tv/shows/popular?page=\" + pageNumber + \"&limit=\" + itemsPerPage;\n    const options = {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"trakt-api-version\": '2',\n        \"trakt-api-key\": TRAKT_CLIENT_KEY\n      }\n    };\n    return fetch(url, options)\n      .then(response => {\n        const pageCount = parseInt(response.headers.get(\"X-Pagination-Page-Count\"));\n        const itemCount = parseInt(response.headers.get(\"X-Pagination-Item-Count\"));\n        dispatch(receivePaginationInfo(pageCount, itemCount));\n        return response.json()\n      })\n      .then(json => {\n        dispatch(receiveShows(json));\n        json.map(info => dispatch(fetchPosterInfo(info.ids.tvdb)));\n      });\n  }\n}\n\nexport function requestShows() {\n  return {\n    type: REQUEST_SHOWS\n  }\n}\n\nexport function receiveShows(shows) {\n  return {\n    type: RECEIVE_SHOWS,\n    shows: shows,\n  }\n}\n\nexport function receivePaginationInfo(pageCount, itemCount) {\n  return {\n    type: RECEIVE_PAGINATION_INFO,\n    pageCount: pageCount,\n    itemCount: itemCount,\n  }\n}\n\n\n// Getting poster info\n\nexport function fetchPosterInfo(posterId) {\n  return dispatch => {\n    dispatch(requestPosterInfo(posterId));\n\n    const url = \"https://webservice.fanart.tv/v3/tv/\" + posterId + \"?api_key=\" + FANART_PROJECT_KEY +\n      \"&client_key=\" + FANART_PERSONAL_KEY;\n    const options = {\n      headers: {\n        // \"api-key\": FANART_PROJECT_KEY,\n        // \"client-key\": FANART_PERSONAL_KEY\n      }\n    };\n    return fetch(url, options)\n      .then(response => response.json())\n      .then(json => dispatch(receivePosterInfo(json, posterId)));\n  }\n}\n\nexport function requestPosterInfo(posterId) {\n  return {\n    type: REQUEST_POSTER_INFO,\n    posterId: posterId\n  }\n}\n\nexport function receivePosterInfo(info, posterId) {\n  return {\n    type: RECEIVE_POSTER_INFO,\n    info: info,\n    posterId: posterId\n  }\n}\n\n\n// Pagination\n\nexport function setNextPage() {\n  return {\n    type: SET_NEXT_PAGE\n  }\n}\n\nexport function setPreviousPage() {\n  return {\n    type: SET_PREVIOUS_PAGE\n  }\n}\n","import { combineReducers } from 'redux'\nimport {\n  RECEIVE_PAGINATION_INFO,\n  RECEIVE_POSTER_INFO,\n  RECEIVE_SHOWS,\n  REQUEST_SHOWS,\n  SET_NEXT_PAGE,\n  SET_PREVIOUS_PAGE\n} from \"../actions\";\n\nexport function showsReducer(state = {}, action) {\n  switch (action.type) {\n    case REQUEST_SHOWS:\n      return state;\n    case RECEIVE_SHOWS:\n      console.log(action.shows);\n      let id = 1;\n      return {\n        ...state,\n        info: action.shows.map(show => ({\n          id: id++,\n          title: show.title,\n          year: show.year,\n          posterId: show.ids.tvdb\n        })),\n        infoNeedToBeChanged: false\n      };\n    case RECEIVE_PAGINATION_INFO:\n      return {\n        ...state,\n        pageCount: action.pageCount,\n        itemCount: action.itemCount\n      };\n    case RECEIVE_POSTER_INFO:\n      // TODO: normal algo\n      return {\n        ...state,\n        info: state.info.map(show =>\n            show.posterId === action.posterId ? {...show, posterUrl: getPosterUrlFromInfo(action.info)} : show\n          )\n      };\n    case SET_NEXT_PAGE:\n      return {\n        ...state,\n        pageNumber: state.pageNumber === state.pageCount ? state.pageNumber : state.pageNumber + 1,\n        infoNeedToBeChanged: true\n      };\n    case SET_PREVIOUS_PAGE:\n      return {\n        ...state,\n        pageNumber: state.pageNumber === 1 ? 1 : state.pageNumber - 1,\n        infoNeedToBeChanged: true\n    }\n  }\n  return state;\n}\n\nfunction getPosterUrlFromInfo(info) {\n  if (info.tvposter) {\n    if (info.tvposter instanceof Array) return info.tvposter[0].url;\n    return info.tvposter.url;\n  }\n  if (info.seasonposter) {\n    if (info.seasonposter instanceof Array) return info.seasonposter[0].url;\n    return info.seasonposter.url;\n  }\n  return null;\n}\n\nconst rootReducer = combineReducers({\n  shows: showsReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../actions\"\n\nclass Table extends React.Component {\n  render() {\n    const {shows} = this.props;\n    const showsElems = shows && shows.info && shows.info.map(show =>\n      <tr key={show.id}>\n        <td>{show.id}</td>\n        <td>{show.title}</td>\n        <td>{show.year}</td>\n        <td>\n          {!show.posterUrl ? \"\" :\n            <a href={show.posterUrl} target=\"_blank\">\n              {show.posterUrl === null ? \"No poster ;(\" :\n                <img src={show.posterUrl} className=\"poster\" alt={show.title + \" poster\"}/>}\n            </a>\n          }\n        </td>\n      </tr>\n    );\n\n    return (\n      <div className=\"Table\">\n        <table>\n          <thead>\n            <tr>\n              <td>№</td>\n              <td>Title</td>\n              <td>Year</td>\n              <td>Poster</td>\n            </tr>\n          </thead>\n          <tbody>{showsElems}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shows: state.shows\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst PageElement = (props) => {\n  // TODO: click time limit\n  return <div>\n    <button onClick={() => props.previousPage()} disabled={props.currPage === 1}>{\"<\"}</button>\n    {props.currPage}\n    <button onClick={() => props.nextPage()} disabled={props.currPage === props.totalPages}>{\">\"}</button>\n  </div>;\n};\n\nPageElement.propTypes = {\n  previousPage: PropTypes.func.isRequired,\n  nextPage: PropTypes.func.isRequired,\n  currPage: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired\n};\n\nexport default PageElement;\n","import React from \"react\";\n\nconst Loading = () => {\n  return <div className=\"loading\">Loading...</div>\n};\n\nexport default Loading;\n","import React from 'react';\nimport '../App.css';\nimport Table from \"./Table\";\nimport * as actionCreators from \"../actions\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport PageElement from \"../components/PageElement\";\nimport Loading from \"../components/Loading\";\n\nclass App extends React.Component {\n  // componentWillMount() {\n  //   const {shows} = this.props;\n  //   if (shows.infoNeedToBeChanged) {\n  //     this.props.fetchShows(shows.pageNumber, shows.itemsPerPage);\n  //   }\n  // }\n\n  render() {\n    const {shows} = this.props;\n    const infoLoaded = shows.pageCount && shows.itemCount;\n\n    if (shows.infoNeedToBeChanged) {\n      this.props.fetchShows(shows.pageNumber, shows.itemsPerPage);\n      return <div className=\"App\">\n        <Loading/>\n      </div>\n    }\n    if (!infoLoaded) {\n      return <div className=\"App\">\n        <Table/>\n      </div>;\n    }\n    const extraInfo = <div>\n      <p>TV-shows displayed: {shows.itemsPerPage}. Page {shows.pageNumber} of {shows.pageCount}</p>\n      <p>Shows in total: {shows.itemCount}</p>\n    </div>;\n    return <div className=\"App\">\n      <PageElement previousPage={() => this.props.setPreviousPage()} nextPage={() => this.props.setNextPage()}\n                   currPage={shows.pageNumber} totalPages={shows.pageCount}/>\n      <Table/>\n      {extraInfo}\n    </div>\n\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shows: state.shows\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initState = {\n  shows: {\n    info: [],\n    pageCount: null,\n    itemCount: null,\n    pageNumber: 1,\n    itemsPerPage: 10,\n    infoNeedToBeChanged: true\n  }\n};\n\nexport default initState;\n","import React from 'react';\nimport { render } from 'react-dom'\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/index'\nimport './index.css';\nimport App from './containers/App';\nimport initState from \"./initState\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk'\n// import * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(rootReducer, initState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}