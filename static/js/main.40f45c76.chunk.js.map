{"version":3,"sources":["actions/index.js","reducers/index.js","components/LoadingSpinner.js","containers/Table.js","components/Paginator.js","components/LoadingPage.js","containers/App.js","initState.js","index.js"],"names":["TRAKT_CLIENT_KEY","FANART_PERSONAL_KEY","FANART_PROJECT_KEY","REQUEST_SHOWS","RECEIVE_SHOWS","REQUEST_POSTER_INFO","RECEIVE_POSTER_INFO","FAIL_POSTER_INFO","RECEIVE_PAGINATION_INFO","SET_PAGE","CHANGE_ITEMS_PER_PAGE","SHOW_IMG","fetchShows","pageNumber","itemsPerPage","dispatch","type","url","options","headers","Content-Type","trakt-api-version","trakt-api-key","fetch","then","response","pageCount","parseInt","get","itemCount","receivePaginationInfo","json","shows","map","info","fetchPosterInfo","ids","tvdb","posterId","requestPosterInfo","ok","failPosterInfo","receivePosterInfo","revealImg","showId","setPage","changeItemsPerPage","value","items","rootReducer","combineReducers","state","arguments","length","undefined","action","Object","objectSpread","infoNeedToBeChanged","showsDownloaded","console","log","id","show","title","year","imgLoaded","posterUrl","tvposter","Array","seasonposter","LoadingSpinner","react_default","a","createElement","className","Table","_this","this","props","showsElems","key","href","rel","target","components_LoadingSpinner","src","alt","onLoad","hidden","React","Component","connect","bindActionCreators","actionCreators","Paginator","currPage","totalPages","prevButton","onClick","nextButton","numberedButtonMaker","buttNumb","pageNumb","LoadingPage","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","event","_this2","infoLoaded","header","components_LoadingPage","containers_Table","extraInfo","onChange","components_Paginator","p","initState","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.40f45c76.chunk.js","sourcesContent":["import fetch from 'cross-fetch';\n\nconst TRAKT_CLIENT_KEY = \"1098aa9283a45930885916b98e046d43cd7301e4de4198c5e624aa39b5cd6972\";\nconst FANART_PERSONAL_KEY = \"313966685b1712ca5f9c4c15427da38d\";\nconst FANART_PROJECT_KEY = \"4a2226e35da3b653ed9d980ae3efb5f8\";\nexport const REQUEST_SHOWS = \"REQUEST_SHOWS\";\nexport const RECEIVE_SHOWS = \"RECEIVE_SHOWS\";\nexport const REQUEST_POSTER_INFO = \"REQUEST_POSTER_INFO\";\nexport const RECEIVE_POSTER_INFO = \"RECEIVE_POSTER_INFO\";\nexport const FAIL_POSTER_INFO = \"FAIL_POSTER_INFO\";\nexport const RECEIVE_PAGINATION_INFO = \"RECEIVE_PAGINATION_INFO\";\nexport const SET_PAGE = \"SET_PAGE\";\nexport const CHANGE_ITEMS_PER_PAGE = \"CHANGE_ITEMS_PER_PAGE\";\nexport const SHOW_IMG = \"SHOW_IMG\";\n\n\n// Getting all shows info\n\nexport function fetchShows(pageNumber, itemsPerPage) {\n  return dispatch => {\n    dispatch(requestShows());\n\n    const url = \"https://api.trakt.tv/shows/popular?page=\" + pageNumber + \"&limit=\" + itemsPerPage;\n    const options = {\n      headers: {\n        \"Content-Type\": 'application/json',\n        \"trakt-api-version\": '2',\n        \"trakt-api-key\": TRAKT_CLIENT_KEY\n      }\n    };\n    return fetch(url, options)\n      .then(response => {\n        const pageCount = parseInt(response.headers.get(\"X-Pagination-Page-Count\"));\n        const itemCount = parseInt(response.headers.get(\"X-Pagination-Item-Count\"));\n        dispatch(receivePaginationInfo(pageCount, itemCount));\n        return response.json()\n      })\n      .then(json => {\n        dispatch(receiveShows(json));\n        json.map(info => dispatch(fetchPosterInfo(info.ids.tvdb)));\n      });\n  }\n}\n\nfunction requestShows() {\n  return {\n    type: REQUEST_SHOWS\n  }\n}\n\nfunction receiveShows(shows) {\n  return {\n    type: RECEIVE_SHOWS,\n    shows: shows,\n  }\n}\n\nexport function receivePaginationInfo(pageCount, itemCount) {\n  return {\n    type: RECEIVE_PAGINATION_INFO,\n    pageCount: pageCount,\n    itemCount: itemCount,\n  }\n}\n\n\n// Getting poster info\n\nexport function fetchPosterInfo(posterId) {\n  return dispatch => {\n    dispatch(requestPosterInfo(posterId));\n\n    const url = \"https://webservice.fanart.tv/v3/tv/\" + posterId + \"?api_key=\" + FANART_PROJECT_KEY +\n      \"&client_key=\" + FANART_PERSONAL_KEY;\n    return fetch(url)\n      .then(response => {\n        if (!response.ok) {\n          dispatch(failPosterInfo(posterId))\n        } else {\n          return response.json()\n        }\n      })\n      .then(json => dispatch(receivePosterInfo(json, posterId)));\n  }\n}\n\nexport function requestPosterInfo(posterId) {\n  return {\n    type: REQUEST_POSTER_INFO,\n    posterId: posterId\n  }\n}\n\nexport function receivePosterInfo(info, posterId) {\n  return {\n    type: RECEIVE_POSTER_INFO,\n    info: info,\n    posterId: posterId\n  }\n}\n\nexport function failPosterInfo(posterId) {\n  return {\n    type: FAIL_POSTER_INFO,\n    posterId: posterId\n  }\n}\n\nexport function revealImg(showId) {\n  return {\n    type: SHOW_IMG,\n    showId: showId\n  }\n}\n\n\n// Pagination\n\nexport function setPage(pageNumber) {\n  return {\n    type: SET_PAGE,\n    pageNumber: pageNumber,\n  }\n}\n\nexport function changeItemsPerPage(value) {\n  return {\n    type: CHANGE_ITEMS_PER_PAGE,\n    items: value\n  }\n}\n","import { combineReducers } from 'redux'\nimport {\n  CHANGE_ITEMS_PER_PAGE,\n  FAIL_POSTER_INFO,\n  RECEIVE_PAGINATION_INFO,\n  RECEIVE_POSTER_INFO,\n  RECEIVE_SHOWS,\n  REQUEST_SHOWS,\n  SET_NEXT_PAGE, SET_PAGE,\n  SET_PREVIOUS_PAGE, SHOW_IMG\n} from \"../actions\";\n\nexport function showsReducer(state = {}, action) {\n  switch (action.type) {\n    case REQUEST_SHOWS:\n      return {\n        ...state,\n        infoNeedToBeChanged: false,\n        showsDownloaded: false\n      };\n    case RECEIVE_SHOWS:\n      console.log(action.shows);\n      let id = 1 + (state.pageNumber - 1) * state.itemsPerPage;\n      return {\n        ...state,\n        info: action.shows.map(show => ({\n          id: id++,\n          title: show.title,\n          year: show.year,\n          posterId: show.ids.tvdb,\n          imgLoaded: false,\n        })),\n        showsDownloaded: true\n      };\n    case RECEIVE_PAGINATION_INFO:\n      return {\n        ...state,\n        pageCount: action.pageCount,\n        itemCount: action.itemCount\n      };\n    case RECEIVE_POSTER_INFO:\n      // TODO: normal algo\n      return {\n        ...state,\n        info: state.info.map(show =>\n            show.posterId === action.posterId ? {...show, posterUrl: getPosterUrlFromInfo(action.info)} : show\n          )\n      };\n    case FAIL_POSTER_INFO:\n      return {\n        ...state,\n        info: state.info.map(show =>\n          show.posterId === action.posterId ? {...show, posterUrl: \"no info\"} : show\n        )\n      };\n    case SHOW_IMG:\n      return {\n        ...state,\n        info: state.info.map(show =>\n          show.id === action.showId ? {...show, imgLoaded: true} : show\n        )\n      };\n    case SET_PAGE:\n      return {\n        ...state,\n        pageNumber: (action.pageNumber < 1) || (action.pageNumber > state.pageCount) ? state.pageNumber :\n          action.pageNumber,\n        infoNeedToBeChanged: true\n      };\n    case CHANGE_ITEMS_PER_PAGE:\n      return {\n        ...state,\n        itemsPerPage: action.items,\n        pageNumber: 1,\n        infoNeedToBeChanged: true\n      }\n  }\n  return state;\n}\n\nfunction getPosterUrlFromInfo(info) {\n  if (info.tvposter) {\n    if (info.tvposter instanceof Array) return info.tvposter[0].url;\n    return info.tvposter.url;\n  }\n  if (info.seasonposter) {\n    if (info.seasonposter instanceof Array) return info.seasonposter[0].url;\n    return info.seasonposter.url;\n  }\n  return \"no posters\";\n}\n\nconst rootReducer = combineReducers({\n  shows: showsReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\n\nconst LoadingSpinner = () => {\n  return <div className=\"spinner\"/>\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../actions\"\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nclass Table extends React.Component {\n  render() {\n    const {shows} = this.props;\n    const showsElems = shows && shows.info && shows.info.map(show =>\n      <tr key={show.id}>\n        <td>{show.id}</td>\n        <td>{show.title}</td>\n        <td>{show.year ? show.year : \"¯\\\\_(ツ)_/¯\"}</td>\n        <td>\n          {!show.posterUrl ? <LoadingSpinner/> :\n            show.posterUrl === \"no posters\" ? <p>Only logo :(</p> :\n              show.posterUrl === \"no info\" ? <p>No posters ;(</p> :\n                <a href={show.posterUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                  {!show.imgLoaded ? <LoadingSpinner/> : \"\"}\n                  <img src={show.posterUrl} className=\"poster\" alt={show.title + \" poster\"}\n                       onLoad={() => this.props.revealImg(show.id)} hidden={!show.imgLoaded}/>\n                </a>\n          }\n        </td>\n      </tr>\n    );\n\n    return (\n      <div className=\"Table\">\n        <table>\n          <thead>\n            <tr>\n              <td>№</td>\n              <td>Title</td>\n              <td>Year</td>\n              <td>Poster</td>\n            </tr>\n          </thead>\n          <tbody>{showsElems}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shows: state.shows\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n// TODO: click time limit\nconst Paginator = (props) => {\n  const {currPage, totalPages} = props;\n\n  const paginatorClassName = \"pagination\";\n  const prevButton = currPage <= 3 ? \"\" :\n    <li>\n      <a className=\"prev\" onClick={() => props.setPage(1)} >\n        «\n      </a>\n    </li>;\n  const nextButton = currPage >= totalPages - 2 ? \"\" :\n    <li>\n      <a className=\"next\" onClick={() => props.setPage(totalPages)}>\n        »\n      </a>\n    </li>;\n  const numberedButtonMaker = (buttNumb, pageNumb) => {\n    return (pageNumb < buttNumb) || (pageNumb > totalPages) ? \"\" :\n      <li>\n        <a className={currPage === pageNumb ? \"active\" : \"\"} onClick={() => props.setPage(pageNumb)}>\n          {pageNumb}\n        </a>\n      </li>\n  };\n\n  if (currPage - 2 < 1) {\n    return <ul className={paginatorClassName}>\n      {prevButton}\n      {numberedButtonMaker(1, 1)}\n      {numberedButtonMaker(2, 2)}\n      {numberedButtonMaker(3, 3)}\n      {numberedButtonMaker(4, 4)}\n      {numberedButtonMaker(5, 5)}\n      {nextButton}\n    </ul>;\n  }\n\n  if (currPage + 2 > totalPages) {\n    return <ul className={paginatorClassName}>\n      {prevButton}\n      {numberedButtonMaker(1,totalPages - 4)}\n      {numberedButtonMaker(2,totalPages - 3)}\n      {numberedButtonMaker(3,totalPages - 2)}\n      {numberedButtonMaker(4,totalPages - 1)}\n      {numberedButtonMaker(5,totalPages)}\n      {nextButton}\n    </ul>;\n  }\n\n  return <ul className={paginatorClassName}>\n    {prevButton}\n    {numberedButtonMaker(1, currPage - 2)}\n    {numberedButtonMaker(2, currPage - 1)}\n    {numberedButtonMaker(3, currPage)}\n    {numberedButtonMaker(4, currPage + 1)}\n    {numberedButtonMaker(5, currPage + 2)}\n    {nextButton}\n  </ul>;\n};\n\nPaginator.propTypes = {\n  setPage: PropTypes.func.isRequired,\n  currPage: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired\n};\n\nexport default Paginator;\n","import React from \"react\";\n\nconst LoadingPage = () => {\n  return <div className=\"loader\" />\n};\n\nexport default LoadingPage;\n","import React from 'react';\nimport '../App.css';\nimport Table from \"./Table\";\nimport * as actionCreators from \"../actions\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport Paginator from \"../components/Paginator\";\nimport LoadingPage from \"../components/LoadingPage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.changeItemsPerPage(event.target.value);\n  }\n\n  render() {\n    const {shows} = this.props;\n    const infoLoaded = shows.pageCount && shows.itemCount;\n    const header = <h1>\n      TV SERIES POSTERS\n    </h1>;\n\n    if (shows.infoNeedToBeChanged) {\n      this.props.fetchShows(shows.pageNumber, shows.itemsPerPage);\n      return <div className=\"App\">\n        <LoadingPage/>\n      </div>\n    }\n    if (!shows.showsDownloaded) {\n      return <div className=\"App\">\n        <LoadingPage/>\n      </div>\n    }\n    if (!infoLoaded) {\n      return <div className=\"App\">\n        {header}\n        <Table/>\n      </div>;\n    }\n    const extraInfo = <div>\n      <p>TV-shows displayed:\n        <select value={shows.itemsPerPage} onChange={this.handleChange}>\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n          <option value={50}>50</option>\n        </select>. Page {shows.pageNumber} of {shows.pageCount}</p>\n      <p>Shows in total: {shows.itemCount}</p>\n    </div>;\n    return <div className=\"App\">\n      {header}\n      <Paginator setPage={(p) => this.props.setPage(p)} currPage={shows.pageNumber} totalPages={shows.pageCount}/>\n      <Table/>\n      {extraInfo}\n    </div>\n\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shows: state.shows\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initState = {\n  shows: {\n    info: [],\n    pageCount: null,\n    itemCount: null,\n    pageNumber: 1,\n    itemsPerPage: 10,\n    infoNeedToBeChanged: true,\n    showsDownloaded: false\n  }\n};\n\nexport default initState;\n","import React from 'react';\nimport { render } from 'react-dom'\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/index'\nimport './index.css';\nimport App from './containers/App';\nimport initState from \"./initState\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk'\n// import * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(rootReducer, initState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}