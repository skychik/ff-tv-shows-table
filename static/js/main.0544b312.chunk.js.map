{"version":3,"sources":["actions/index.js","reducers/index.js","components/LoadingSpinner.js","containers/Table.js","components/Paginator.js","components/LoadingPage.js","components/Header.js","components/SearchForm.js","containers/App.js","initState.js","index.js"],"names":["FANART_PERSONAL_KEY","FANART_PROJECT_KEY","REQUEST_SHOWS","RECEIVE_SHOWS","REQUEST_POSTER_INFO","RECEIVE_POSTER_INFO","FAIL_POSTER_INFO","RECEIVE_PAGINATION_INFO","SET_PAGE","CHANGE_ITEMS_PER_PAGE","SHOW_IMG","SET_SEARCH_VALUE","REQUEST_SEARCH_SHOWS","RECEIVE_SEARCH_SHOWS","FAIL_SEARCH_SHOWS","SET_SEARCH_MODE","traktOptions","headers","Content-Type","trakt-api-version","trakt-api-key","fetchShows","pageNumber","itemsPerPage","dispatch","type","url","fetch","then","response","ok","receivePaginationInfo","json","failSearchShows","shows","map","info","fetchPosterInfo","ids","tvdb","pageCount","parseInt","get","itemCount","setSearchValue","value","searchShows","searchMode","searchByField","console","log","show","posterId","requestPosterInfo","failPosterInfo","receivePosterInfo","revealImg","showId","setPage","changeItemsPerPage","items","setSearchMode","mode","rootReducer","combineReducers","id","state","arguments","length","undefined","action","Object","objectSpread","infoNeedToBeChanged","showsDownloaded","title","overview","year","rating","votes","slug","imgLoaded","item","posterUrl","tvposter","Array","seasonposter","search","_","trim","previousValue","pending","failed","fetchedSearchMode","LoadingSpinner","react_default","a","createElement","className","Table","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSorting","bind","assertThisInitialized","event","_this2","isEmpty","showsElems","key","href","target","rel","components_LoadingSpinner","src","alt","onLoad","hidden","onClick","setSorting","React","Component","connect","bindActionCreators","actionCreators","Paginator","currPage","totalPages","prevButton","nextButton","numberedButtonMaker","buttNumb","pageNumb","LoadingPage","Header","text","toUpperCase","SearchForm","handleInputChange","handleKeyPressed","handleModeChange","handleSearch","_this$props","_this$props2","placeholder","ref","input","onChange","onKeyPress","App","handleChange","infoLoaded","ExtraInfo","SearchInfo","components_LoadingPage","components_SearchForm","components_Header","components_Paginator","p","containers_Table","initState","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.0544b312.chunk.js","sourcesContent":["import fetch from 'cross-fetch';\n\nconst TRAKT_CLIENT_KEY = \"1098aa9283a45930885916b98e046d43cd7301e4de4198c5e624aa39b5cd6972\";\nconst FANART_PERSONAL_KEY = \"313966685b1712ca5f9c4c15427da38d\";\nconst FANART_PROJECT_KEY = \"4a2226e35da3b653ed9d980ae3efb5f8\";\nexport const REQUEST_SHOWS = \"REQUEST_SHOWS\";\nexport const RECEIVE_SHOWS = \"RECEIVE_SHOWS\";\nexport const REQUEST_POSTER_INFO = \"REQUEST_POSTER_INFO\";\nexport const RECEIVE_POSTER_INFO = \"RECEIVE_POSTER_INFO\";\nexport const FAIL_POSTER_INFO = \"FAIL_POSTER_INFO\";\nexport const RECEIVE_PAGINATION_INFO = \"RECEIVE_PAGINATION_INFO\";\nexport const SET_PAGE = \"SET_PAGE\";\nexport const CHANGE_ITEMS_PER_PAGE = \"CHANGE_ITEMS_PER_PAGE\";\nexport const SHOW_IMG = \"SHOW_IMG\";\nexport const SET_SEARCH_VALUE = \"SET_SEARCH_VALUE\";\nexport const REQUEST_SEARCH_SHOWS = \"REQUEST_SEARCH_SHOWS\";\nexport const RECEIVE_SEARCH_SHOWS = \"RECEIVE_SEARCH_SHOWS\";\nexport const FAIL_SEARCH_SHOWS = \"FAIL_SEARCH_SHOWS\";\nexport const SET_SEARCH_MODE = \"SET_SEARCH_MODE\";\n\nconst traktOptions = {\n  headers: {\n    \"Content-Type\": 'application/json',\n    \"trakt-api-version\": '2',\n    \"trakt-api-key\": TRAKT_CLIENT_KEY\n  }\n};\n\n\n// Getting all shows info\n\nexport function fetchShows(pageNumber, itemsPerPage) {\n  return dispatch => {\n    dispatch(requestShows());\n\n    const url = \"https://api.trakt.tv/shows/popular?extended=full&page=\" + pageNumber + \"&limit=\" + itemsPerPage;\n    return fetch(url, traktOptions)\n      .then(response => {\n        if (!response.ok) {\n          dispatch(failSearchShows())\n        } else {\n          dispatch(receivePaginationInfo(response));\n          return response.json()\n        }\n      })\n      .then(json => {\n        dispatch(receiveShows(json));\n        json.map(info => dispatch(fetchPosterInfo(info.ids.tvdb)));\n      });\n  }\n}\n\nfunction requestShows() {\n  return {\n    type: REQUEST_SHOWS\n  }\n}\n\nfunction receiveShows(shows) {\n  return {\n    type: RECEIVE_SHOWS,\n    shows: shows,\n  }\n}\n\nexport function receivePaginationInfo(response) {\n  return {\n    type: RECEIVE_PAGINATION_INFO,\n    pageCount: parseInt(response.headers.get(\"X-Pagination-Page-Count\")),\n    itemCount: parseInt(response.headers.get(\"X-Pagination-Item-Count\")),\n  }\n}\n\n// Search\n\nexport function setSearchValue(value) {\n  return {\n    type: SET_SEARCH_VALUE,\n    value: value\n  }\n}\n\nexport function searchShows(value, searchMode, pageNumber, itemsPerPage) {\n  return dispatch => {\n    dispatch(requestSearchShows());\n    console.log(\"value=\"+ value);\n    let searchByField;\n    switch (searchMode) {\n      case \"title\":\n        searchByField = \"title\";\n        break;\n      case \"overview\":\n        searchByField = \"overview\";\n        break;\n      case \"anyLangTitle\":\n        searchByField = \"aliases\";\n        break;\n      default:\n        searchByField = \"\";\n    }\n    const url = \"https://api.trakt.tv/search/show?extended=full&field=\" + searchByField + \"&query=\" + value +\n      \"&page=\" + pageNumber + \"&limit=\" + itemsPerPage;\n    return fetch(url, traktOptions)\n      .then(response => {\n        if (!response.ok) {\n          dispatch(failSearchShows())\n        } else {\n          dispatch(receivePaginationInfo(response));\n          return response.json()\n        }\n      })\n      .then(json => {\n        dispatch(receiveSearchShows(json));\n        json.map(info => dispatch(fetchPosterInfo(info.show.ids.tvdb)));\n      });\n  }\n}\n\nfunction requestSearchShows() {\n  return {\n    type: REQUEST_SEARCH_SHOWS\n  }\n}\n\nfunction receiveSearchShows(shows) {\n  return {\n    type: RECEIVE_SEARCH_SHOWS,\n    shows: shows,\n  }\n}\n\nfunction failSearchShows() {\n  return {\n    type: FAIL_SEARCH_SHOWS\n  }\n}\n\n\n// Getting poster info\n\nexport function fetchPosterInfo(posterId) {\n  return dispatch => {\n    dispatch(requestPosterInfo(posterId));\n\n    const url = \"https://webservice.fanart.tv/v3/tv/\" + posterId + \"?api_key=\" + FANART_PROJECT_KEY +\n      \"&client_key=\" + FANART_PERSONAL_KEY;\n    return fetch(url)\n      .then(response => {\n        if (!response.ok) {\n          dispatch(failPosterInfo(posterId))\n        } else {\n          return response.json()\n        }\n      })\n      .then(json => dispatch(receivePosterInfo(json, posterId)));\n  }\n}\n\nexport function requestPosterInfo(posterId) {\n  return {\n    type: REQUEST_POSTER_INFO,\n    posterId: posterId\n  }\n}\n\nexport function receivePosterInfo(info, posterId) {\n  return {\n    type: RECEIVE_POSTER_INFO,\n    info: info,\n    posterId: posterId\n  }\n}\n\nexport function failPosterInfo(posterId) {\n  return {\n    type: FAIL_POSTER_INFO,\n    posterId: posterId\n  }\n}\n\nexport function revealImg(showId) {\n  return {\n    type: SHOW_IMG,\n    showId: showId\n  }\n}\n\n\n// Pagination\n\nexport function setPage(pageNumber) {\n  return {\n    type: SET_PAGE,\n    pageNumber: pageNumber,\n  }\n}\n\nexport function changeItemsPerPage(value) {\n  return {\n    type: CHANGE_ITEMS_PER_PAGE,\n    items: value\n  }\n}\n\n\n// Mode\n\nexport function setSearchMode(mode) {\n  return {\n    type: SET_SEARCH_MODE,\n    mode: mode,\n  }\n}\n\n\n","import { combineReducers } from 'redux'\nimport * as _ from \"lodash\";\nimport {\n  CHANGE_ITEMS_PER_PAGE,\n  FAIL_POSTER_INFO, FAIL_SEARCH_SHOWS,\n  RECEIVE_PAGINATION_INFO,\n  RECEIVE_POSTER_INFO, RECEIVE_SEARCH_SHOWS,\n  RECEIVE_SHOWS, REQUEST_SEARCH_SHOWS,\n  REQUEST_SHOWS, SET_SEARCH_MODE,\n  SET_PAGE, SET_SEARCH_VALUE,\n  SHOW_IMG\n} from \"../actions\";\n\nexport function showsReducer(state = {}, action) {\n  let id;\n  switch (action.type) {\n    case REQUEST_SHOWS:\n      return {\n        ...state,\n        infoNeedToBeChanged: false,\n        showsDownloaded: false\n      };\n    case REQUEST_SEARCH_SHOWS:\n      return {\n        ...state,\n        infoNeedToBeChanged: false,\n        showsDownloaded: false\n      };\n    case RECEIVE_SHOWS:\n      id = 1 + (state.pageNumber - 1) * state.itemsPerPage;\n      return {\n        ...state,\n        info: action.shows && action.shows.map(show => ({\n          id: id++,\n          title: show.title,\n          overview: show.overview,\n          year: show.year,\n          rating: show.rating,\n          votes: show.votes,\n          posterId: show.ids.tvdb,\n          slug: show.ids.slug,\n          imgLoaded: false,\n        })),\n        showsDownloaded: true\n      };\n    case RECEIVE_SEARCH_SHOWS:\n      id = 1 + (state.pageNumber - 1) * state.itemsPerPage;\n      return {\n        ...state,\n        info: action.shows && action.shows.map(item => ({\n          id: id++,\n          title: item.show.title,\n          overview: item.show.overview,\n          year: item.show.year,\n          rating: item.show.rating,\n          votes: item.show.votes,\n          posterId: item.show.ids.tvdb,\n          slug: item.show.ids.slug,\n          imgLoaded: false,\n        })),\n        showsDownloaded: true\n      };\n    case RECEIVE_PAGINATION_INFO:\n      return {\n        ...state,\n        pageCount: action.pageCount,\n        itemCount: action.itemCount\n      };\n    case RECEIVE_POSTER_INFO:\n      // TODO: normal algo\n      return {\n        ...state,\n        info: state.info && state.info.map(show =>\n            show.posterId === action.posterId ? {...show, posterUrl: getPosterUrlFromInfo(action.info)} : show\n          )\n      };\n    case FAIL_POSTER_INFO:\n      return {\n        ...state,\n        info: state.info && state.info.map(show =>\n          show.posterId === action.posterId ? {...show, posterUrl: \"no info\"} : show\n        )\n      };\n    case SHOW_IMG:\n      return {\n        ...state,\n        info: state.info && state.info.map(show =>\n          show.id === action.showId ? {...show, imgLoaded: true} : show\n        )\n      };\n    case SET_PAGE:\n      return {\n        ...state,\n        pageNumber: (action.pageNumber < 1) || (action.pageNumber > state.pageCount) ? state.pageNumber :\n          action.pageNumber,\n        infoNeedToBeChanged: true\n      };\n    case CHANGE_ITEMS_PER_PAGE:\n      return {\n        ...state,\n        itemsPerPage: action.items,\n        pageNumber: 1,\n        infoNeedToBeChanged: true\n      }\n  }\n  return state;\n}\n\nfunction getPosterUrlFromInfo(info) {\n  if (info.tvposter) {\n    if (info.tvposter instanceof Array) return info.tvposter[0].url;\n    return info.tvposter.url;\n  }\n  if (info.seasonposter) {\n    if (info.seasonposter instanceof Array) return info.seasonposter[0].url;\n    return info.seasonposter.url;\n  }\n  return \"no posters\";\n}\n\nfunction searchReducer(state = {}, action) {\n  switch (action.type) {\n    case SET_SEARCH_VALUE:\n      return {\n        ...state,\n        value: _.escapeRegExp(action.value.trim())\n      };\n    case REQUEST_SEARCH_SHOWS:\n      return {\n        ...state,\n        previousValue: state.value,\n        value: \"\",\n        pending: true,\n        failed: false\n      };\n    case RECEIVE_SEARCH_SHOWS:\n      return {\n        ...state,\n        pending: false\n      };\n    case FAIL_SEARCH_SHOWS:\n      return {\n        ...state,\n        pending: false,\n        failed: true\n      };\n  }\n  return state;\n}\n\nfunction infoReducer(state = {}, action) {\n  switch (action.type) {\n    case REQUEST_SEARCH_SHOWS:\n      return {\n        ...state,\n        fetchedSearchMode: state.searchMode,\n        mode: \"search\",\n      };\n    case REQUEST_SHOWS:\n      return {\n        ...state,\n        mode: \"popular\",\n      };\n    case SET_SEARCH_MODE:\n      return {\n        ...state,\n        searchMode: action.mode,\n      }\n  }\n  return state;\n}\n\n\nconst rootReducer = combineReducers({\n  shows: showsReducer,\n  search: searchReducer,\n  info: infoReducer,\n});\n\nexport default rootReducer;\n","import React from \"react\";\n\nconst LoadingSpinner = () => {\n  return <div className=\"spinner\"/>\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as actionCreators from \"../actions\"\nimport LoadingSpinner from \"../components/LoadingSpinner\";\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSorting = this.handleSorting.bind(this);\n  }\n\n  handleSorting(event) {\n\n  }\n\n  render() {\n    const {shows} = this.props;\n\n    console.log(\"!shows.info || shows.info === []\");\n    console.log(!shows.info || shows.info.isEmpty);\n\n    // if (!shows.info || shows.info === []) {\n    //   return \"No such shows ;(\"\n    // }\n\n    const showsElems = shows.info && shows.info.map(show => {\n        const overview = show.overview ? show.overview : \"¯\\\\_(ツ)_/¯\";\n        const year = show.year ? show.year : \"¯\\\\_(ツ)_/¯\";\n        // const rating = !show.rating || !show.votes ? \"¯\\\\_(ツ)_/¯\" : <span>\n        //   <p>{show.rating}</p>*<p>{show.votes}</p>={show.rating * show.votes}\n        // </span>;\n        const rating = show.rating;\n\n        return <tr key={show.id}>\n          <td>{show.id}</td>\n          <td>\n            <a href={\"https://trakt.tv/shows/\" + show.slug} target=\"_blank\" rel=\"noopener noreferrer\">\n              {show.title}\n            </a>\n          </td>\n          <td>{overview}</td>\n          <td>{year}</td>\n          <td>{rating}</td>\n          <td>\n            {!show.posterUrl ? <LoadingSpinner/> :\n              show.posterUrl === \"no posters\" ? <p>Only logo :(</p> :\n                show.posterUrl === \"no info\" ? <p>No posters ;(</p> :\n                  <a href={show.posterUrl} rel=\"noopener noreferrer\" target=\"_blank\">\n                    {!show.imgLoaded ? <LoadingSpinner/> : \"\"}\n                    <img src={show.posterUrl} className=\"poster\" alt={show.title + \" poster\"}\n                         onLoad={() => this.props.revealImg(show.id)} hidden={!show.imgLoaded}/>\n                  </a>\n            }\n          </td>\n        </tr>\n      }\n    );\n\n    return (\n      <div className=\"Table\">\n        <table>\n          <thead>\n            <tr>\n              <th className={\"No\"} onClick={() => this.props.setSorting(\"No\")}>№</th>\n              <th>Title</th>\n              <th>Overview</th>\n              <th>Year</th>\n              <th>Rating</th>\n              {/*<th className={\"ascend\"}>Rating * Votes number</th>*/}\n              <th>Poster</th>\n            </tr>\n          </thead>\n          <tbody>{showsElems}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shows: state.shows,\n    info: state.info\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n// TODO: click time limit\nconst Paginator = (props) => {\n  const {currPage, totalPages} = props;\n\n  const paginatorClassName = \"pagination\";\n  const prevButton = currPage <= 3 ? \"\" :\n    <li>\n      <button className=\"prev\" onClick={() => props.setPage(1)} >\n        «\n      </button>\n    </li>;\n  const nextButton = currPage >= totalPages - 2 ? \"\" :\n    <li>\n      <button className=\"next\" onClick={() => props.setPage(totalPages)}>\n        »\n      </button>\n    </li>;\n  const numberedButtonMaker = (buttNumb, pageNumb) => {\n    return (pageNumb < buttNumb) || (pageNumb > totalPages) ? \"\" :\n      <li>\n        <button className={currPage === pageNumb ? \"active\" : \"\"}\n                onClick={currPage !== pageNumb ? () => props.setPage(pageNumb) : null}>\n          {pageNumb}\n        </button>\n      </li>\n  };\n\n  if (currPage - 2 < 1) {\n    return <ul className={paginatorClassName}>\n      {prevButton}\n      {numberedButtonMaker(1, 1)}\n      {numberedButtonMaker(2, 2)}\n      {numberedButtonMaker(3, 3)}\n      {numberedButtonMaker(4, 4)}\n      {numberedButtonMaker(5, 5)}\n      {nextButton}\n    </ul>;\n  }\n\n  if (currPage + 2 > totalPages) {\n    return <ul className={paginatorClassName}>\n      {prevButton}\n      {numberedButtonMaker(1,totalPages - 4)}\n      {numberedButtonMaker(2,totalPages - 3)}\n      {numberedButtonMaker(3,totalPages - 2)}\n      {numberedButtonMaker(4,totalPages - 1)}\n      {numberedButtonMaker(5,totalPages)}\n      {nextButton}\n    </ul>;\n  }\n\n  return <ul className={paginatorClassName}>\n    {prevButton}\n    {numberedButtonMaker(1, currPage - 2)}\n    {numberedButtonMaker(2, currPage - 1)}\n    {numberedButtonMaker(3, currPage)}\n    {numberedButtonMaker(4, currPage + 1)}\n    {numberedButtonMaker(5, currPage + 2)}\n    {nextButton}\n  </ul>;\n};\n\nPaginator.propTypes = {\n  setPage: PropTypes.func.isRequired,\n  currPage: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired\n};\n\nexport default Paginator;\n","import React from \"react\";\n\nconst LoadingPage = () => {\n  return <div className=\"loader\" />\n};\n\nexport default LoadingPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = (props) =>\n  <h1>\n    {props.text.toUpperCase()}\n  </h1>;\n\nHeader.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\n\nexport default Header;\n","import React from \"react\";\nimport * as actionCreators from \"../actions\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport {setPage} from \"../actions\";\n\nclass SearchForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleKeyPressed = this.handleKeyPressed.bind(this);\n    this.handleModeChange = this.handleModeChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n  }\n\n  handleInputChange() {\n    this.props.setSearchValue(this.search.value);\n  }\n\n  handleKeyPressed(event) {\n    if (event.key === \"Enter\") {\n      this.handleSearch()\n    }\n  }\n\n  handleModeChange(event) {\n    this.props.setSearchMode(event.target.value);\n  }\n\n  handleSearch() {\n    const {shows, search, info} = this.props;\n    if (search.value !== \"\") {\n      this.props.setPage(1);\n      this.props.searchShows(search.value, info.searchMode, shows.pageNumber, shows.itemsPerPage);\n    }\n  }\n\n  // TODO: enter button\n  // TODO: validation\n  render() {\n    const {shows, search, info} = this.props;\n    return <div>\n      <p>\n        <input type=\"search\" placeholder=\"Search...\"\n               ref={input => this.search = input} onChange={this.handleInputChange} onKeyPress={this.handleKeyPressed}/>\n        <span>\n          <select value={info.searchMode} onChange={this.handleModeChange}>\n            <option value=\"title\">by title</option>\n            <option value=\"anyLangTitle\">by title (any language)</option>\n            <option value=\"overview\">by overview</option>\n          </select>\n        </span>\n        <button onClick={this.handleSearch}>Find</button>\n      </p>\n    </div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shows: state.shows,\n    search: state.search,\n    info: state.info,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\n","import React from 'react';\nimport '../App.css';\nimport Table from \"./Table\";\nimport * as actionCreators from \"../actions\";\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport Paginator from \"../components/Paginator\";\nimport LoadingPage from \"../components/LoadingPage\";\nimport Header from \"../components/Header\";\nimport SearchForm from \"../components/SearchForm\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.changeItemsPerPage(event.target.value);\n  }\n\n  // TODO: display shows with posters first, then without posters\n  render() {\n    const {shows, info, search} = this.props;\n    const infoLoaded = shows.pageCount && shows.itemCount;\n    const ExtraInfo = <div>\n      <p>\n        TV-shows displayed:\n        <select value={shows.itemsPerPage} onChange={this.handleChange}>\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={25}>25</option>\n          <option value={50}>50</option>\n        </select>. Page {shows.pageNumber} of {shows.pageCount}</p>\n      <p>Shows in total: {shows.itemCount}</p>\n    </div>;\n    const SearchInfo = info.mode !== \"search\" ? \"\" :\n      <h2>\n        Search by {info.fetchedSearchMode === \"anyLangTitle\" ? \"title (any language)\" : info.fetchedSearchMode} results for:\n          \"{search.previousValue}\".\n        <button onClick={() => this.props.fetchShows(shows.pageNumber, shows.itemsPerPage)}>Show all TV-shows</button>\n      </h2>;\n\n    if (shows.infoNeedToBeChanged) {\n      switch (info.mode) {\n        case \"popular\":\n          this.props.fetchShows(shows.pageNumber, shows.itemsPerPage);\n          break;\n        case \"search\":\n          this.props.searchShows(search.value, info.searchMode, shows.pageNumber, shows.itemsPerPage);\n      }\n      return <div className=\"App\">\n        <LoadingPage/>\n      </div>\n    }\n\n    if (!shows.showsDownloaded) {\n      return <div className=\"App\">\n        <LoadingPage/>\n      </div>\n    }\n\n    if (!infoLoaded) {\n      return <div className=\"App\">\n        <SearchForm/>\n        <Header text=\"tv show posters\"/>\n        {SearchInfo}\n        <Table/>\n      </div>;\n    }\n\n    return <div className=\"App\">\n      <SearchForm/>\n      <Header text=\"tv show posters\"/>\n      <Paginator setPage={(p) => this.props.setPage(p)} currPage={shows.pageNumber} totalPages={shows.pageCount}/>\n      {SearchInfo}\n      <Table/>\n      {ExtraInfo}\n    </div>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    shows: state.shows,\n    search: state.search,\n    info: state.info,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const initState = {\n  shows: {\n    info: [],\n    pageCount: null, // TODO: move to info section\n    itemCount: null, // TODO: move to info section\n    pageNumber: 1, // TODO: move to info section\n    itemsPerPage: 10, // TODO: move to info section\n    infoNeedToBeChanged: true, // TODO: move to info section\n    showsDownloaded: false // TODO: move to info section\n  },\n  search: {\n    value: \"\",\n    pending: false,\n    failed: false\n  },\n  info: {\n    mode: \"popular\",\n    searchMode: \"title\"\n  }\n};\n\nexport default initState;\n","import React from 'react';\nimport { render } from 'react-dom'\nimport { applyMiddleware, createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/index'\nimport './index.css';\nimport App from './containers/App';\nimport initState from \"./initState\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk'\n// import * as serviceWorker from './serviceWorker';\n\n\nconst store = createStore(rootReducer, initState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}